// init
@256
D=A
@SP
M=D
// call Sys.init 0
@Sys.init.ReturnAdress2000
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL  // push locals of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG  // push arguments of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS  // push this of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT  // push that of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  // ADR = SP - num_args - 5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP  // reposition of locals
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init.ReturnAdress2000)
// function Class1.set 0
(Class1.set)
@0
D=A
@R15
M=D
(Class1.set.loop) // reset the function locals to zero
@R15
D=M
@Class1.set.end
D;JEQ
@R15
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Class1.set.loop
0;JMP
(Class1.set.end)
// push segment 0
@0
D=A
@2
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
A=M
D=M
@Class1.0
M=D
// push segment 1
@1
D=A
@2
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
A=M
D=M
@Class1.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@5
D=A
@LCL
A=M-D
D=M
@R15
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
// function Class1.get 0
(Class1.get)
@0
D=A
@R15
M=D
(Class1.get.loop) // reset the function locals to zero
@R15
D=M
@Class1.get.end
D;JEQ
@R15
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Class1.get.loop
0;JMP
(Class1.get.end)
// push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub 
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// return
@5
D=A
@LCL
A=M-D
D=M
@R15
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
// function Class2.set 0
(Class2.set)
@0
D=A
@R15
M=D
(Class2.set.loop) // reset the function locals to zero
@R15
D=M
@Class2.set.end
D;JEQ
@R15
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Class2.set.loop
0;JMP
(Class2.set.end)
// push segment 0
@0
D=A
@2
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@SP
M=M-1
A=M
D=M
@Class2.0
M=D
// push segment 1
@1
D=A
@2
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@SP
M=M-1
A=M
D=M
@Class2.1
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@5
D=A
@LCL
A=M-D
D=M
@R15
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
// function Class2.get 0
(Class2.get)
@0
D=A
@R15
M=D
(Class2.get.loop) // reset the function locals to zero
@R15
D=M
@Class2.get.end
D;JEQ
@R15
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Class2.get.loop
0;JMP
(Class2.get.end)
// push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub 
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
// return
@5
D=A
@LCL
A=M-D
D=M
@R15
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
// function Sys.init 0
(Sys.init)
@0
D=A
@R15
M=D
(Sys.init.loop) // reset the function locals to zero
@R15
D=M
@Sys.init.end
D;JEQ
@R15
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.init.loop
0;JMP
(Sys.init.end)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@Class1.set.ReturnAdress0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL  // push locals of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG  // push arguments of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS  // push this of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT  // push that of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  // ADR = SP - num_args - 5
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP  // reposition of locals
D=M
@LCL
M=D
@Class1.set
0;JMP
(Class1.set.ReturnAdress0)
// pop temp 0
@0
D=A
@5
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
A=A+1
A=M
M=D
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@Class2.set.ReturnAdress1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL  // push locals of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG  // push arguments of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS  // push this of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT  // push that of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  // ADR = SP - num_args - 5
D=M
@2
D=D-A
@5
D=D-A
@ARG
M=D
@SP  // reposition of locals
D=M
@LCL
M=D
@Class2.set
0;JMP
(Class2.set.ReturnAdress1)
// pop temp 0
@0
D=A
@5
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
A=A+1
A=M
M=D
// call Class1.get 0
@Class1.get.ReturnAdress2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL  // push locals of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG  // push arguments of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS  // push this of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT  // push that of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  // ADR = SP - num_args - 5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP  // reposition of locals
D=M
@LCL
M=D
@Class1.get
0;JMP
(Class1.get.ReturnAdress2)
// call Class2.get 0
@Class2.get.ReturnAdress3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL  // push locals of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG  // push arguments of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS  // push this of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT  // push that of calling function
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  // ADR = SP - num_args - 5
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP  // reposition of locals
D=M
@LCL
M=D
@Class2.get
0;JMP
(Class2.get.ReturnAdress3)
// label WHILE
(Sys.WHILE)
// go to WHILE
@Sys.WHILE
0;JMP
